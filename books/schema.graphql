schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}


type Book {
    username: String
    userId: String
}

type Message {
    content: String
    senderId: String
    recipientId: String
}

type createUserResult {
    user: User
    success: Boolean!
    errors: [String]
}

type createMessageResult {
    message: Message
    success: Boolean!
    errors: [String]
}

type messagesResult {
    messages: [Message]
    success: Boolean!
    errors: [String]
}


type Query {
    books: String!
    messages(userId: String!): messagesResult
    userId(username: String!): String
}


type Mutation {
    createBook(title: String!) : Book!
    createUser(username: String!): createUserResult
    createMessage(senderId: String, recipientId: String, content: String): createMessageResult
}


type Subscription {
    messages(userId: String): Message
}